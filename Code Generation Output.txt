section .data
    authorizedCodes db "12345678901234560101", 0
                    db "98765432101234561010", 0
                    db "11112222333344441100", 0
                    db "44443333222211110011", 0
                    db "55556666777788880110", 0

section .text
    global _start

_start:
    mov rdi, authorizedCodes     ; Load the address of authorizedCodes into rdi
    call yylex                    ; Call the yylex function
    mov rax, 60                   ; System call number for exit
    xor rdi, rdi                  ; Exit code 0
    syscall                       ; Make the system call

yylex:
    mov rsi, 16                   ; Length of each authorized code
    mov rcx, 5                    ; Number of authorized codes
    mov rdx, input                ; Address of input
    mov rdi, authorizedCodes     ; Address of authorizedCodes

compare_loop:
    mov rax, rdi                  ; Load the address of authorizedCodes into rax
    mov rbx, rdx                  ; Load the address of input into rbx
    mov rcx, 16                   ; Length of each authorized code

    repe cmpsb                    ; Compare strings byte by byte
    jne not_authorized            ; Jump if not equal

    ; Authorized code found
    mov rax, 1                    ; System call number for write
    mov rdi, 1                    ; File descriptor 1 (stdout)
    mov rsi, authorized_message   ; Address of authorized message
    mov rdx, authorized_message_length  ; Length of the message
    syscall                       ; Make the system call

    mov rax, 60                   ; System call number for exit
    xor rdi, rdi                  ; Exit code 0
    syscall                       ; Make the system call

not_authorized:
    add rdi, 16                   ; Move to the next authorized code
    loop compare_loop            ; Repeat the loop

    ; Not authorized
    mov rax, 1                    ; System call number for write
    mov rdi, 1                    ; File descriptor 1 (stdout)
    mov rsi, denied_message       ; Address of denied message
    mov rdx, denied_message_length; Length of the message
    syscall                       ; Make the system call

    ret

section .bss
    input resb 16                 ; Buffer for input

section .data
    authorized_message db "Card authorized: Allowed", 10
    authorized_message_length equ $ - authorized_message

    denied_message db "Card authorization: Denied", 10
    denied_message_length equ $ - denied_message